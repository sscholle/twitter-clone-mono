name: Twitter Clone
# description: Docker Compose file for a Twitter clone application


services:
  postgres:
    image: postgres:16.2-alpine
    shm_size: 1g
    user: postgres
    restart: always
    healthcheck:
      test: 'pg_isready -U user --dbname=twitter_clone'
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5430:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: twitter_clone
      PGDATA: /var/lib/postgresql/data/pgdata
    command: |
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=5
      -c hot_standby=on
      -c hot_standby_feedback=on
    volumes:
      # - twitter_clone_pgdata:/var/lib/postgresql/data
      # Migration files made accessible to the container
      # - ./postgres/migrations:/migrations
      # Custom PostgreSQL configuration
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/config/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ./postgres/:/docker-entrypoint-initdb.d
  # zero-cache:
  #   restart: always
  #   needs:
  #     - postgres
  #   ports:
  #     - 4848:4848
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=twitter_clone
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_SSLMODE=disable
  #   image: zero-cache:latest
  #   build:
  #     context: .
  #     dockerfile: ./zero-cache/zero-cache.Dockerfile 
  # auth-server:
  #   # image: auth-server:latest
  #   build:
  #     context: .
  #     dockerfile: ./auth-server/auth-server.dockerfile
  # angular-client:
  #   image: angular-client:latest
  #   build:
  #     context: .
  #     dockerfile: ./angular-client/angular-client.Dockerfile

# volumes:
#   twitter_clone_pgdata:
#     driver: local
